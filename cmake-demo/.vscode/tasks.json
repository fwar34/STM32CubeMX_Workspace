{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "CMake Configure",
            "type": "shell",
            "command": "cmake",
            "args": [
                "-DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE",
                "-GNinja",
                "-Bbuild"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "CMake Build",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "if (-not (Test-Path -Path 'build/{workspaceFolderBasename}.elf')) { cmake -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -GNinja -Bbuild }; cmake --build build --target all; arm-none-eabi-objcopy -Oihex build/${workspaceFolderBasename}.elf build/${workspaceFolderBasename}.hex; arm-none-eabi-objcopy -Obinary build/${workspaceFolderBasename}.elf build/${workspaceFolderBasename}.bin"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": [],
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "Flash",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "if (-not (Test-Path -Path \"build/${workspaceFolderBasename}.elf\")) { cmake --build build --target all; arm-none-eabi-objcopy -Oihex build/${workspaceFolderBasename}.elf build/${workspaceFolderBasename}.hex; arm-none-eabi-objcopy -Obinary build/${workspaceFolderBasename}.elf build/${workspaceFolderBasename}.bin } else { openocd -f interface/stlink.cfg -f target/stm32f1x.cfg -c \"program ./build/${workspaceFolderBasename}.elf verify reset exit\" }"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        // {
        //     "label": "Flash",
        //     "type": "shell",
        //     "command": "openocd",
        //     "args": [
        //         "-f",
        //         // "interface/cmsis-dap.cfg",
        //         "interface/stlink.cfg",
        //         "-f",
        //         "target/stm32f1x.cfg",
        //         "-c",
        //         "program ./build/${workspaceFolderBasename}.elf verify reset exit"
        //     ],
        //     "group": {
        //         "kind": "build",
        //         "isDefault": true
        //     },
        //     "problemMatcher": [],
        //     "presentation": {
        //         "echo": false,
        //         "reveal": "always",
        //         "focus": false,
        //         "panel": "shared",
        //         "showReuseMessage": true,
        //         "clear": false
        //     }
        // },
        {
            "label": "Delete build",
            "type": "shell",
            "windows": {
                "command": "powershell",
                "args": [
                    "-Command",
                    "if (Test-Path -Path 'build') { Remove-Item -Path 'build' -Recurse -Force; if ($?) { Write-Host 'Delete build success' }} else { Write-Host 'build 目录不存在，无需删除。' }"
                ]
            },
            "problemMatcher": [],
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        }
    ]
}